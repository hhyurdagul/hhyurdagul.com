---
import { render, type CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import BackButton from "../components/links/BackButton.astro";
import TableOfContents from "../components/TableOfContents.astro";

type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const { Content, headings } = await render(post);

function get_locale(lang: string): string {
  return lang === "tr" ? "tr-TR" : "en-US";
}
---

<BaseLayout>
  <aside class="sidebar" slot="sidebar">
    <BackButton title="Back to Blog" href="/blog" />
    {headings.length > 0 && <TableOfContents headings={headings} />}
  </aside>

  <article class="blog-post">
    <header class="post-header">
      <h1>{post.data.title}</h1>
      <div class="post-meta">
        <time datetime={post.data.pubDate.toISOString()}>
          {
            post.data.pubDate.toLocaleDateString(
              get_locale(post.data.language),
              {
                year: "numeric",
                month: "long",
                day: "numeric",
              },
            )
          }
        </time>
      </div>
    </header>

    <div class="prose">
      <Content />
    </div>
  </article>
</BaseLayout>

<style>
  .sidebar {
    width: 30%;
    position: sticky;
    top: 2rem;
    align-self: flex-start;
    max-height: calc(100vh - 4rem);
    overflow-y: auto;
  }

  .blog-post {
    margin-bottom: 3rem;
  }

  .post-header {
    margin-bottom: 3rem;
    border-bottom: 1px solid var(--border-color);
  }

  .post-header h1 {
    margin-bottom: 1rem;
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 0.95rem;
    color: var(--text-secondary);
    margin-bottom: 1rem;
  }

  .prose {
    font-size: 1.05rem;
    line-height: 1.8;
  }

  .prose :global(h1),
  .prose :global(h2),
  .prose :global(h3),
  .prose :global(h4),
  .prose :global(h5),
  .prose :global(h6) {
    margin-top: 2.5rem;
    margin-bottom: 1rem;
  }

  .prose :global(p) {
    margin-bottom: 1.5rem;
  }

  .prose :global(ul),
  .prose :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
  }

  .prose :global(li) {
    margin-bottom: 0.5rem;
  }

  .prose :global(a) {
    color: var(--accent-primary);
    text-decoration: underline;
    text-decoration-color: transparent;
    transition: text-decoration-color var(--transition-speed) ease;
  }

  .prose :global(a:hover) {
    text-decoration-color: var(--accent-primary);
  }

  .prose :global(code) {
    background-color: var(--bg-content);
    color: var(--accent-primary);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-size: 0.9em;
    font-family:
      ui-monospace, "Cascadia Code", "Source Code Pro", Menlo, Consolas,
      "DejaVu Sans Mono", monospace;
  }

  .prose :global(pre) {
    background-color: var(--bg-content);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: 1.5rem;
    overflow-x: auto;
    margin-bottom: 1.5rem;
  }

  .prose :global(pre code) {
    background-color: transparent;
    padding: 0;
  }

  .prose :global(blockquote) {
    border-left: 3px solid var(--accent-primary);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--text-secondary);
  }

  .prose :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: var(--border-radius);
    margin: 2rem 0;
  }

  @media (max-width: 820px) {
    .sidebar {
      width: 100%;
      position: static;
      margin-bottom: 3rem;
      max-height: none;
      overflow-y: visible;
    }

    .prose {
      font-size: 1rem;
    }
  }
</style>
